---
title: 'MC1: Explore relationships between Articles'
author: 'Ng Yen Ngee'
date: '2021-07-15'
lastmod: '2021-07-15'
slug: []
cover: "/img/explore_relationships.png"
categories: []
tags: ['MITB', 'Text Analytics', "MC1"]
output:
  blogdown::html_page: 
    toc: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(fig.retina = 3, 
                      echo=TRUE,
                      eval=TRUE,
                      message = FALSE,
                      warning = FALSE)
```

# Introduction 
In this post, I will be running through the Data Preparation for completing [Vast Challenge MC1](https://vast-challenge.github.io/2021/MC1.html). The analysis done after preparing the data can be found [here](). 

## Preperation 
## Import packages 

```{r load package}
library(tidyverse)
library(tidytext)
library(ggraph)
library(igraph)
library(widyr)
```

## Load Data 
```{r tokens}
token_words <- read_rds("data/news_article_token_words.rds")
token_bigrams <- read_rds("data/news_article_bigrams.rds")

```

## Explore relationships 

### "Correlations" between articles
we want to know which newsgroup is more similar based on the words they use. 

```{r articles_cor}
words_by_articles <- token_words %>% 
  count(source, word, sort=TRUE) %>% 
  ungroup()

articles_cors <- words_by_articles %>%
  pairwise_cor(source, word,n,sort=TRUE)

articles_cors
```

```{r cor_viz}
articles_cors %>%
  filter(correlation > .7) %>%
  graph_from_data_frame() %>%
  ggraph(layout='fr') + 
  geom_edge_link(aes(alpha = correlation, width = correlation)) + #alpha gives the shade
  geom_node_point(size=6, color="lightblue") +
  geom_node_text(aes(label=name), color="red", repel=TRUE) + 
  theme_void()
  
```

## ngrams
We look at words as consecutive terms. 

```{r bigram_viz}
bigram_counts <- bigrams_filtered  %>%
  count(word, sort=TRUE) %>%
  filter(n>3) 
bigram_counts

bigram_counts %>%
  graph_from_data_frame() %>%
  ggraph(layout='fr') + 
  geom_edge_link() +
  geom_node_point() +
  geom_node_text(aes(label=name), vjust=1, hjust=1) + 
  theme_void()

a <- grid::arrow(type="closed", 
                 length=unit(.15, "inches"))
bigram_counts %>%
  graph_from_data_frame() %>%
  ggraph(layout='fr') + 
  geom_edge_link( #aes(edge_alpha = n), 
                 show.legend = FALSE, 
                 arrow = a, 
                 end_cap = circle(.07, 'inches')
                 ) +
  geom_node_point(color = "lightblue", 
                  size=5) +
  geom_node_text(aes(label=name), vjust=1, hjust=1) + 
  theme_void()
```