---
title: 'MC1: Findings and Discoveries'
author: "Ng Yen Ngee"
date: '2021-07-24'
lastmod: '2021-07-25'
slug: []
cover: "/img/data_discovery.png"
categories: []
tags: ["MC1", 'MITB', 'Text Analytics']
output:
  blogdown::html_page: 
    toc: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(fig.retina = 3, 
                      echo=FALSE,
                      eval=TRUE,
                      message = FALSE,
                      warning = FALSE)
```

# Introduction 
In this post, I will be running through the findings and analysis of [Vast Challenge MC1](https://vast-challenge.github.io/2021/MC1.html). This will be my main page and answer to my class [assignment](https://isss608.netlify.app/assignment.html). 

The objective of this assignment is identify the complex relationships between the people, organizations, news articles given the data that we have. 


## Content of all Posts 

Below and the table of content on the left is how we can navigate through the posts and analysis. Each section has a full post dedicated which runs through explanations, codes and actual visualizations. As analyzing in R and the data set is new to me, some of the posts are documented in a step by step manner with a run through of how I managed to arrive at the last visualization for my analysis below. Hence, some of the posts are quite lengthy. If you want to skip to the analysis bit, please scroll down to the analysis section of this post. 

* Literature Review [Full Post](https://yenngee-dataviz.netlify.app/post/2021-07-17-mc1-literature-review/)
* Data Preparation [Full Post](https://yenngee-dataviz.netlify.app/post/2021-07-11-mc1-data-preperation/)
* Analysis 
  * 1a Primary Vs Derivative Sources [Full Post](https://yenngee-dataviz.netlify.app/post/2021-07-15-mc1-primary-vs-derivative-sources/)
  * 1b Relationships:Primary vs Derivative Sources [Full Post](https://yenngee-dataviz.netlify.app/post/2021-07-15-mc1-explore-relationships-between-articles/)
  * 2 Who is biased? [Full Post](https://yenngee-dataviz.netlify.app/post/2021-07-16-mc1-who-is-bias-to-whom/)
  * 3 Connections and Relationships [Full Post](https://yenngee-dataviz.netlify.app/post/2021-07-20-mc1-connections-revealed/)

## Literature Review 



## Data Preperation
The complete **Data Preparation process** can be found [here](https://yenngee-dataviz.netlify.app/post/2021-07-11-mc1-data-preperation/). The data preparation has included a step by step description of understanding the data and transforming unstructured text such as the news articles into a structured dataframe. For this portion of the post, I will be starting from a cleaned data source. 

```{r load package}
library(tidyverse)
library(tidytext)
library(tidygraph)
library(stringr)
library(gridExtra)
library(lubridate)
library(ggraph)
library(igraph)
library(widyr)
library(visNetwork)
```

```{r load data}
cleaned_text_source <- read_rds("data/news_article_clean_primary_vs_derivative.rds")
```

## Analysis
### 1a) Primary Vs Derivative Sources 
This section will answer part 1a of the challenge: Which are primary sources and which are derivative sources?

Primary Sources is "first-hand" information, while secondary sources provide analysis, commentary or criticism on the Primary source. In terms of data, we've defined primary source as the following: 
- article text start with a time format 
- article title contains the word blog 
- duplicated article titles that is printed first 

We have the following output: 

```{r source_type_per_article}
full_source_type_per_article <- expand_grid(source = unique(cleaned_text_source$source), 
                                             is_primary = c('primary', 'derivative')) 

source_type_per_article <- cleaned_text_source %>%
  group_by(source, is_primary, primary_type) %>%
  summarize(n = n()) %>% 
  ungroup() %>%
  right_join(full_source_type_per_article, by = c('source', 'is_primary')) %>%
  arrange(desc(n))

source_type_per_article_perc <- cleaned_text_source %>%
  group_by(source, is_primary) %>%
  summarize(n = n()) %>% 
  ungroup() %>%
  right_join(full_source_type_per_article, by = c('source', 'is_primary')) %>%
  arrange(desc(n)) %>% 
  pivot_wider(names_from= is_primary, values_from=n) %>%
  replace_na(list(derivative=0L, primary=0L)) %>%
  mutate(primary_perc = primary/(derivative + primary), 
         source = as.character(source)) %>%
  select(source, primary_perc)

source_type_per_article <- source_type_per_article %>%
  left_join(source_type_per_article_perc) %>%
  mutate(source = fct_reorder(source, primary_perc))
```

**Primary VS Derivative of each source**

```{r plot_pyramid3, echo=FALSE}
plot_derivative <- source_type_per_article %>% 
  filter(is_primary == "derivative") %>%
  ggplot(aes(x=source, y=n, fill=primary_type)) +
  geom_bar(stat='identity', fill="#0072B2") +
  scale_y_continuous('') + 
  ylim(0,120)+
  theme(legend.position = 'none',
        axis.title.y = element_blank(),
        plot.title = element_text(size = 11.5, hjust = 0.5),
        plot.margin=unit(c(0.1,0.2,0.1,-.1),"cm"),
        axis.ticks.y = element_blank(), 
        axis.text.y = element_text(hjust = 0.5)) + #theme_bw()$axis.text.y,
  ggtitle("Derivative") + 
  coord_flip() 
  
plot_primary <- source_type_per_article %>% 
  filter(is_primary == "primary") %>%
  ggplot(aes(x=source, y=n)) +
  geom_bar(stat='identity', fill="#D55E00") +
  # ylim(0,120)+
  scale_y_continuous(trans = 'reverse', limits=c(120,0))+ 
  theme(legend.position = 'none',
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(), 
        plot.title = element_text(size = 11.5, hjust = 0.5),
        plot.margin=unit(c(0.1,0,0.1,0.05),"cm")) + 
  ggtitle("Primary") +
  coord_flip()

plot_sources <- source_type_per_article %>% 
  filter(is_primary == "derivative") %>%
  ggplot(aes(x=source, y=n)) +
  geom_bar(stat='identity')+
  geom_text(aes(y=0, label=source))+ 
  coord_flip()

grid.arrange(plot_primary, plot_derivative, 
             widths=c(0.4,0.6),
             ncol=2
)
``` 


**Percentile of Primary VS Derivative of each source**

```{r plot_perc_bar, echo=FALSE}
source_type_per_article %>%
  ggplot(aes(fill=is_primary, y=n, x=source)) +
  geom_bar(position="fill", stat="identity") +
  coord_flip()

```

```{r plot_breakdown_primary_type}
source_type_per_article %>%
  filter(primary_type %in% c('first post', 'blog post')) %>%
  ggplot(aes(fill=primary_type, y=n, x=source)) +
  geom_bar( stat="identity") +
  coord_flip()
```

ANALYSIS WRITE HERE 

We can see that "Modern Rubicon" and "Centrum Sentinel" are fully 

```{r news_article_groups}
news_article_groups <- tribble(
  ~source, ~group, ~is_primary,
  "The Light of Truth", "A", 'Derivative', 
  "The General Post",   "A", 'Derivative', 
  "Who What News",      "A", 'Derivative', 
  "The Tulip",          "A", 'Derivative', 
  "The World",          "A", 'Primary', 
  "World Journal",      "B", 'Derivative', 
  "Everyday News",      "B", 'Derivative', 
  "The Continent",      "B", 'Derivative', 
  "World Source",       "B", 'Partially Primary', 
  "International Times","B", 'Partially Primary', 
  "All News Today",     "C", 'Partially Primary', 
  "The Wrap",           "C", 'Derivative', 
  "Daily Pegasus",      "C", 'Derivative', 
  "The Orb",            "C", 'Derivative', 
  "Homeland Illumination", "C", 'Primary', 
  "International News", "D", 'Derivative', 
  "Worldwise",          "D", 'Derivative', 
  "The Truth",          "D", 'Derivative', 
  "The Guide",          "D", 'Derivative', 
  "Kronos Star",        "D", 'Partially Primary',  
  "News Desk",          "E", 'Derivative', 
  "The Explainer",      "E", 'Derivative', 
  "Athena Speaks",      "E", 'Derivative', 
  "Central Bulletin",   "E", 'Derivative', 
  "The Abila Post",     "E", 'Primary', 
  "News Online Today",  "Others", 'Derivative', 
  "Modern Rubicon",     "Others", 'Primary', 
  "Centrum Sentinel",   "Others", 'Primary', 
  "Tethys News",        "Others",  'Derivative'
)

news_article_groups %>% select(source, is_primary)
```

### 1b) Relationships:Primary vs Derivative Sources
This section will answer part 1b of the challenge: What are the relationships between the primary and derivative sources?

```{r cor_monogram}
custom_stop_words <- tribble(
  ~word, ~lexicon,
  "kronos", "CUSTOM",
  "abila",  "CUSTOM"
)
stop_words2 <- stop_words %>%
  bind_rows(custom_stop_words)

token_words <- cleaned_text_source %>% 
  unnest_tokens(word, text) %>%
  filter(str_detect(word, "[a-z']$"), # only keep words. exclude all numeric. 
         !word %in% stop_words2$word) # to remove stop words 

words_by_articles <- token_words %>% 
  count(source, word, sort=TRUE) %>% 
  ungroup()

articles_cors <- words_by_articles %>%
  pairwise_cor(source, word,n,sort=TRUE) %>% 
  distinct(correlation, .keep_all = TRUE)

articles_cors %>%
  filter(correlation > .65) %>% 
  graph_from_data_frame() %>%
  ggraph(layout='fr') + 
  geom_edge_link(aes(alpha = correlation) , width = 1.5) + #alpha gives the shade
  geom_node_point(size=6, color="lightblue") +
  geom_node_text(aes(label=name), color="red", repel=TRUE) + 
  theme_void()
```


```{r dup_articles}
article_titles_dup <- cleaned_text_source %>%
  group_by(title) %>%
  add_count(source) %>% 
  summarize(n_distinct_source = n_distinct(source), 
            n_distinct_date = n_distinct(published_date), 
            min_date = min(published_date),
            n = n()) %>%
  ungroup() %>%
  filter(n>1 & n_distinct_source>1 & n_distinct_date > 1) %>%
  arrange(desc(n))

dup_articles <- cleaned_text_source %>%
  filter(title %in% unique(article_titles_dup$title)) %>%
  arrange(desc(title), desc(source)) %>%
  left_join(article_titles_dup %>% select(title, min_date)) %>%
  drop_na(published_date, min_date) %>%
  mutate(days_lagged = published_date - min_date) %>%
  mutate(days_lagged = ifelse(days_lagged >=2, '>=2 days', paste(days_lagged, 'day'))) 

lag_nodes <- tibble(unique(cleaned_text_source$source), .name_repair = ~c("label")) %>%
  rowid_to_column('id') %>%
  left_join(news_article_groups, by = c("label" = "source")) %>%
  rename(cluster = group, group = is_primary)

no_lag <- dup_articles %>%
  filter(days_lagged == "0 day") %>%
  select(source, title)

with_lag <- dup_articles %>%
  filter(days_lagged != "0 day") %>%
  select(source, title, days_lagged)

lag_edges <- right_join(no_lag, with_lag, by= "title") %>%
  rename(source_label = source.x,
         target_label = source.y) %>%
  left_join(lag_nodes %>% select(label, id), by = c("source_label" = "label")) %>%
  rename(from = id) %>%
  left_join(lag_nodes %>% select(label, id), by = c("target_label" = "label")) %>%
  rename(to = id)

lag_edges_agg <- lag_edges %>%
  mutate(arrows = "from") %>%
  group_by(from, to, source_label, target_label, arrows) %>%
  summarize(value = n()) %>%
  ungroup() %>%
  mutate(smooth = TRUE) %>%
  arrange(desc(value))

visNetwork(lag_nodes, lag_edges_agg) %>%
  visIgraphLayout(layout = "layout_with_fr")%>%
  visOptions(highlightNearest=TRUE,
             nodesIdSelection=TRUE)%>%
  visLayout(randomSeed=123)
```

### 2) Who is biased? 
This section will answer part 2 of the challenge: Characterize any biases you identify in these news sources, with respect to their representation of specific people, places, and events. 
This section will be limited to 6 images and 500 words.




### 3) Connections and Relationships 
This section will answer part 3 of the challenge: Given the data sources provided, use visual analytics to identify potential official and unofficial relationships among GASTech, POK, the APA, and Government. Include both personal relationships and shared goals and objectives. Provide evidence for these relationships. 
This section will be limited to 6 images and 400 words.


## Conclusion 

TBC

